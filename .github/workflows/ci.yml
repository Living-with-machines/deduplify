name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # Don't cancel all jobs if one fails
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, "3.10"]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.3.2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt
          python -m pip install -r dev-requirements.txt

      - name: Run tests
        run: |
          python -m coverage run -m pytest -vvv

      - name: Generate coverage report
        if: github.event.pull_request
        id: coverage_report
        run: |
          echo '::set-output name=COVERAGE_REPORT::$(coverage report)'

      - name: Comment on PR with Coverage Report
        if: github.event.pull_request
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            var COVERAGE_REPORT = process.env.COVERAGE_REPORT;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${COVERAGE_REPORT}`
            })
        env:
          COVERAGE_REPORT: ${{ steps.coverage_report.outputs.COVERAGE_REPORT }}

      - name: Print coverage report
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          coverage report
